using Telegram.Bot;
using Telegram.Bot.Types;
using Telegram.Bot.Types.Enums;
using Telegram.Bot.Types.ReplyMarkups;

namespace Fitness_bot.View;

public class MessageSender
{
    private readonly ITelegramBotClient _botClient;
    private readonly CancellationToken _cancellationToken;

    public MessageSender(ITelegramBotClient botClient, CancellationToken cancellationToken)
    {
        _botClient = botClient;
        _cancellationToken = cancellationToken;
    }

    public async void SendMenuMessage(Chat chat, InlineKeyboardMarkup keyboardMarkup)
    {
        await _botClient.SendTextMessageAsync(chat,
            "–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é:",
            replyMarkup: keyboardMarkup,
            cancellationToken: _cancellationToken);
    }

    public async void SendChooseMenuMessage(Chat chat, InlineKeyboardMarkup keyboardMarkup, string text)
    {
        await _botClient.SendTextMessageAsync(chat,
            $"–í—ã–±–µ—Ä–∏—Ç–µ {text}:",
            replyMarkup: keyboardMarkup,
            parseMode: ParseMode.MarkdownV2,
            cancellationToken: _cancellationToken);
    }

    public async void SendQuestion(Chat chat)
    {
        await _botClient.SendTextMessageAsync(chat,
            "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –í—ã —Ç—Ä–µ–Ω–µ—Ä –∏ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ç–µ–ª–µ–≥—Ä–∞–º–º-–±–æ—Ç–æ–º Leo?",
            cancellationToken: _cancellationToken,
            parseMode: ParseMode.MarkdownV2,
            replyMarkup: MenuButtons.YesOrNoButtons());
    }

    public async void SendFormStart(Chat chat)
    {
        await _botClient.SendTextMessageAsync(chat,
            "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ü–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –Ω–µ–±–æ–ª—å—à—É—é –∞–Ω–∫–µ—Ç—É.",
            parseMode: ParseMode.MarkdownV2,
            cancellationToken: _cancellationToken);
    }

    public async void SendInputMessage(Chat chat, string text)
    {
        await _botClient.SendTextMessageAsync(chat,
            $"–í–≤–µ–¥–∏—Ç–µ {text}:",
            parseMode: ParseMode.MarkdownV2,
            cancellationToken: _cancellationToken);
    }
 
    public async void SendFailureMessage(Chat chat, string text)
    {
        await _botClient.SendTextMessageAsync(chat,
            $"–ù–µ —É–¥–∞–ª–æ—Å—å –≤–≤–µ—Å—Ç–∏ {text}, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:",
            parseMode: ParseMode.MarkdownV2,
            cancellationToken: _cancellationToken);
    }

    public async void SendFormFinish(Chat chat)
    {
        await _botClient.SendTextMessageAsync(chat,
            "–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–ª–∏ –∞–Ω–∫–µ—Ç—É, —Ç–µ–ø–µ—Ä—å –≤–∞–º –æ—Ç–∫—Ä—ã—Ç –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª!",
            replyMarkup: MenuButtons.ClientMenu(),
            parseMode: ParseMode.MarkdownV2,
            cancellationToken: _cancellationToken);
    }
    
    public async void SendExpQuestion(Chat chat)
    {
        await _botClient.SendTextMessageAsync(chat, 
            "–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –æ–ø—ã—Ç –≤ —Å–ø–æ—Ä—Ç–µ?",
            parseMode: ParseMode.MarkdownV2,
            cancellationToken: _cancellationToken);
    }

    public async void SendAddClientMes(Chat chat)
    {
        await _botClient.SendTextMessageAsync(chat,
            "–ö–ª–∏–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö. –¢–µ–ø–µ—Ä—å –µ–º—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É.",
            parseMode: ParseMode.MarkdownV2,
            cancellationToken: _cancellationToken);
    }
    
    public async void SendDeleteClientMes(Chat chat)
    {
        await _botClient.SendTextMessageAsync(chat,
            "–ö–ª–∏–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.",
            parseMode: ParseMode.MarkdownV2,
            cancellationToken: _cancellationToken);
    }

    public async void SendAddTrainingMes(Message message)
    {
        await _botClient.SendTextMessageAsync(message.Chat,
            message.Text!.ToLower() == "–æ–∫–Ω–æ" ? "‚úÖ –û–∫–Ω–æ –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ *—É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ*" : "‚úÖ –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ *—É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞*",
            parseMode: ParseMode.MarkdownV2,
            cancellationToken: _cancellationToken);
    }

    public async void SendDeleteTrainingMes(Chat chat)
    {
        await _botClient.SendTextMessageAsync(chat,
            "üò¢ –û—á–µ–Ω—å –∂–∞–ª—å, —á—Ç–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ *—É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞*",
            parseMode: ParseMode.MarkdownV2,
            cancellationToken: _cancellationToken);
    }

    public async void SendTextMessage(Chat chat, string text)
    {
        await _botClient.SendTextMessageAsync(chat,
            text,
            parseMode: ParseMode.MarkdownV2,
            cancellationToken: _cancellationToken);
    }
    
    public async void SendEmptyTimetableMes(Chat chat)
    {
        await _botClient.SendTextMessageAsync(chat,
            "–¢—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –Ω–∞ –±–ª–∏–∂–∞–π—à–∏–µ 7 –¥–Ω–µ–π *–Ω–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ* üôÉ",
            parseMode: ParseMode.MarkdownV2,
            cancellationToken: _cancellationToken);
    }

    public async void SendAddOrDeleteClientMes(Chat chat, string text)
    {
        await _botClient.SendTextMessageAsync(chat,
            $"–ß—Ç–æ–±—ã {text} –∫–ª–∏–µ–Ω—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –µ–≥–æ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram:",
            parseMode: ParseMode.MarkdownV2,
            cancellationToken: _cancellationToken);
    }

    public async void SendTrainerInstructionMes(Chat chat)
    {
        await _botClient.SendTextMessageAsync(chat,
            "–ò–Ω—Å—Ç—É–∫—Ü–∏—è –¥–ª—è —Ç—Ä–µ–Ω–µ—Ä–∞",
            replyMarkup: MenuButtons.TrainerMenu(),
            parseMode: ParseMode.MarkdownV2,
            cancellationToken: _cancellationToken);
    }

    public async void SendClientInstructionMes(Chat chat)
    {
        await _botClient.SendTextMessageAsync(chat,
            "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞",
            parseMode: ParseMode.MarkdownV2,
            cancellationToken: _cancellationToken);
    }

    public async void SendRejectClientMes(Chat chat)
    {
        await _botClient.SendTextMessageAsync(chat,
            "–ò–∑–≤–∏–Ω–∏—Ç–µ, —Ç—Ä–µ–Ω–µ—Ä –ø–æ–∫–∞ –Ω–µ –¥–æ–±–∞–≤–∏–ª –≤–∞—Å –≤ —Å–ø–∏—Å–æ–∫ —Å–≤–æ–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤",
            parseMode: ParseMode.MarkdownV2,
            cancellationToken: _cancellationToken);
    }

    public async void SendImpossibleToDetermineMes(Chat chat)
    {
        await _botClient.SendTextMessageAsync(chat,
            "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ —è –Ω–µ –º–æ–≥—É –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–∞—à–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram, —á—Ç–æ–±—ã –∏–¥–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å :(",
            parseMode: ParseMode.MarkdownV2,
            cancellationToken: _cancellationToken);
    }
}